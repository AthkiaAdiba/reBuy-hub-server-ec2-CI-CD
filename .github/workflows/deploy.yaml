name: Deploy to EC2

on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Node JS
        uses: actions/setup-node@v4
        with:
          node-version: 22.11

      - name: Install Dependencies
        run: npm i --frozen-lockfile

      - name: Build App
        run: npm run build

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure SSH
        env:
          SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      # Copy files to EC2
      - name: Upload App to EC2
        env:
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USER: ${{ secrets.EC2_USER }}
        run: |
          ssh $EC2_USER@$EC2_HOST "mkdir -p ~/app"
          rsync -avz \
            --exclude='.git' \
            --exclude='node_modules' \
            --exclude='.github' \
            . $EC2_USER@$EC2_HOST:~/app/

      # Deploy to EC2 with fnm handling
      - name: Deploy to EC2
        env:
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USER: ${{ secrets.EC2_USER }}
        run: |
          ssh $EC2_USER@$EC2_HOST '
            set -e

            # Ensure fnm in PATH and load Node
            export PATH=$HOME/.local/share/fnm:$PATH
            eval "$(fnm env)"

            # Install Node version if missing
            NODE_VERSION=22
            if ! fnm use $NODE_VERSION; then
              echo "Installing Node.js v$NODE_VERSION..."
              fnm install $NODE_VERSION
              fnm use $NODE_VERSION
            fi

            echo "Using Node $(node -v) and npm $(npm -v)"

            # Install deps and build
            cd ~/app
            npm install --frozen-lockfile
            npm run build

            # Restart PM2
            pm2 delete nodejs-app || true
            pm2 start dist/server.js --name nodejs-app
